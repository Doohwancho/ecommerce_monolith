plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.hidetake.swagger.generator' version '2.18.2'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'idea'
}

group = 'com.cho.ecommerce'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

//    implementation 'org.springframework.boot:spring-boot-starter-batch'
//    implementation 'org.springframework.boot:spring-boot-starter-quartz'

//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.thymeleaf:thymeleaf-spring5'

//    runtimeOnly 'com.h2database:h2'

//    implementation 'net.datafaker:datafaker:1.9.0' //for jdk1.8
    implementation 'mysql:mysql-connector-java:8.0.29' //8.0.29

    implementation 'com.google.guava:guava:31.1-jre' //DatabaseCleanup.java 때문에 필요.

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'


    compileOnly 'org.projectlombok:lombok:1.18.28'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
//    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation "org.junit.platform:junit-platform-launcher:1.5.2"
    testImplementation('org.junit.jupiter:junit-jupiter:5.9.2')
//    testImplementation "net.jqwik:jqwik:${jqwikVersion}" //for Property Based Testing

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

//query dsl config
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}